/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.bolt.bolt_embed.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class CartItem {
    /**
     * A human-readable description of this cart item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CartItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Used to provide a link to the image associated with the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;

    public CartItem withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * The name of a given item.
     */
    @JsonProperty("name")
    public String name;

    public CartItem withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of units that comprise this cart item.
     */
    @JsonProperty("quantity")
    public Long quantity;

    public CartItem withQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * This value is used by Bolt as an external reference to a given item.
     */
    @JsonProperty("reference")
    public String reference;

    public CartItem withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The total amount, in cents, of the item including its taxes if applicable.
     */
    @JsonProperty("total_amount")
    public Long totalAmount;

    public CartItem withTotalAmount(Long totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * The price of one unit of the item; for example, the price of one pack of socks.
     */
    @JsonProperty("unit_price")
    public Long unitPrice;

    public CartItem withUnitPrice(Long unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    public CartItem(@JsonProperty("name") String name, @JsonProperty("quantity") Long quantity, @JsonProperty("reference") String reference, @JsonProperty("total_amount") Long totalAmount, @JsonProperty("unit_price") Long unitPrice) {
        this.name = name;
        this.quantity = quantity;
        this.reference = reference;
        this.totalAmount = totalAmount;
        this.unitPrice = unitPrice;
  }
}
